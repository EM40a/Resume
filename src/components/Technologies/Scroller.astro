---
import { TECHNOLOGIES } from '../../../public/js/Tags'
import Item from './Item.astro'
---

<div class='scroller' {...Astro.props}>
  <ul class='scroller-inner'>
    {
      TECHNOLOGIES.map(icon => {
        let title = icon.split('/').pop().split('.')[0] // remove the path and extension
        return <Item title={title.toUpperCase()} technology={icon} />
      })
    }
  </ul>
</div>

<style>
  @keyframes scroll {
    from {
      transform: translateX(0%);
    }
    to {
      transform: translateX(-50%);
    }
  }
  /* With animations */
  [data-animated='true']::before,
  [data-animated='true']::after {
    z-index: 15;
    position: absolute;
    content: '';
    top: 0;
    height: 100%;
    width: 10%;
  }

  [data-animated='true']::before {
    background: linear-gradient(to left, transparent, #071221);
    left: 0;
  }

  [data-animated='true']::after {
    background: linear-gradient(to right, transparent, #071221);
    right: 0;
  }

  [data-animated='true'] {
    @apply overflow-hidden relative;
  }

  [data-animated='true'] .scroller-inner {
    @apply flex gap-x-4 py-4 w-max;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
  }

  [data-animated='true']:hover .scroller-inner {
    animation-play-state: paused;
  }

  .scroller[data-direction='right'] {
    --_animation-direction: forwards;
  }

  .scroller[data-direction='left'] {
    --_animation-direction: reverse;
  }

  .scroller[data-speed='fast'] {
    --_animation-duration: 10s;
  }

  .scroller[data-speed='slow'] {
    --_animation-duration: 35s;
  }
  /* Without animations */
  .scroller-inner {
    @apply grid grid-cols-[repeat(auto-fit,_minmax(5rem,1fr))] gap-4;
  }
</style>
